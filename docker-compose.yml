version: "3.1"

# TODO: Implement network segregation and overlay networks. Need's service registry.
#networks:
  #public:  # to exposer app's UI
  #control:  # internal for CIS for API calls
  #collect:  # where the workload runs and strems

# TODO: Implement external volume driver (like netapp).
# Volume should be controlled by netapp driver
#volumes:
#  data:
#    driver: 

services:
  # Fluentd, as log aggregator
  fluent:
    image: ${DOCKER_SWARM_HOST01:-mon01}.${DOCKER_SWARM_DOMAIN:-virtual-mcp11-ovs.local}:15000/lab-fluentd:latest
    environment:
      # defaults
      - FLUENTD_CONF=fluentd_poc.conf
      - DOCKER_FLUENTD_REPLICAS=1
      #- FLUENTD_OPT=
      #- FLUENTD_UID=
    env_file:
     # override ENV varibles used in this script in ./*.env.
     - poc.env
    volumes:
      - ${PWD}/fluentd/etc:/fluentd/etc #:ro
      - ${DOCKER_FLUENTD_LOG_PAHT:-/fluentd/log}:/fluentd/log
    deploy:
      replicas: 2
    ports:
      - ${DOCKER_FLUENTD_PORT:-24224}:24224/tcp
      - ${DOCKER_FLUENTD_PORT:-24224}:24224/udp
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - default_public    
    #logging:
    #  driver: fluentd
    #  options:
    #    fluentd-address: ${DOCKER_SWARM_HOST01:-mon01}:24224

  #elastic:
  elasticsearch_node1:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.5.0
    environment:
      - bootstrap_memory_lock=true
      - xpack.security.enabled=false
      - discovery.type=zen
      - discovery.zen.minimum_master_nodes=1
      - discovery.zen.ping.unicast.hosts=elasticsearch_node1,elasticsearch_node2,elasticsearch_node3
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - "ES_JAVA_OPTS: -Xms1g -Xmx1g"
    env_file:
     - ./poc.env 
    depends_on:
      - fluent 
    volumes:
     - ${PWD}/elastic/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
     - ${DOCKER_ELASTIC_DATA_DIR:-/elasticsearch_local/node1}:/usr/share/elasticsearch/data
    deploy: 
      replicas: 1 
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    logging:
      driver: fluentd
      options:
        fluentd-address: ${DOCKER_SWARM_HOST01:-mon01}:24224
        tag: docker.{{.ID}}
    networks:
       - elastic_grid

  elasticsearch_node2:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.5.0
    environment:
      - bootstrap_memory_lock=true
      - xpack.security.enabled=false
      - discovery.type=zen
      - discovery.zen.minimum_master_nodes=1
      - discovery.zen.ping.unicast.hosts=elasticsearch_node1,elasticsearch_node2,elasticsearch_node3
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - "ES_JAVA_OPTS: -Xms1g -Xmx1g"
    env_file:
     - ./poc.env
    depends_on:
      - fluent
    volumes:
     - ${PWD}/elastic/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
     - ${DOCKER_ELASTIC_DATA_DIR:-/elasticsearch_local/node2}:/usr/share/elasticsearch/data
    deploy:
      replicas: 1
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    logging:
      driver: fluentd
      options:
        fluentd-address: ${DOCKER_SWARM_HOST01:-mon01}:24224
        tag: docker.{{.ID}}
    networks:
       - elastic_grid

  elasticsearch_node3:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.5.0
    environment:
      - bootstrap_memory_lock=true
      - xpack.security.enabled=false
      - discovery.type=zen
      - discovery.zen.minimum_master_nodes=1
      - discovery.zen.ping.unicast.hosts=elasticsearch_node1,elasticsearch_node2,elasticsearch_node3
      - http.host=0.0.0.0
      - transport.host=0.0.0.0     
      - "ES_JAVA_OPTS: -Xms1g -Xmx1g"
    env_file:
     - ./poc.env
    depends_on:
      - fluent
    volumes:
     - ${PWD}/elastic/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
     - ${DOCKER_ELASTIC_DATA_DIR:-/elasticsearch_local/node3}:/usr/share/elasticsearch/data
    deploy:
      replicas: 1 
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    logging:
      driver: fluentd
      options:
        fluentd-address: ${DOCKER_SWARM_HOST01:-mon01}:24224
        tag: docker.{{.ID}}
    networks:
       - elastic_grid

  elastic_proxy:
    image: nginx
    #environment:
    volumes:
      - ${PWD}/elastic_proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 9200:9200
    deploy:
      replicas: 3 
    logging:
      driver: fluentd
      options:
        fluentd-address: ${DOCKER_SWARM_HOST01:-mon01}:24224
        tag: docker.{{.ID}}
    networks:
      - elastic_grid
      - default_public

  curator:
    image: bobrik/curator
    #env_file:
    # - ./poc.env 
    depends_on:
      - fluent
      - elasticsearch
    volumes:
      - ${PWD}/curator/curator.yml:/curator.yml
      - ${PWD}/curator/action.yml:/action.yml    
    deploy:
      replicas: 1
    logging:
      driver: fluentd
      options:
        fluentd-address: ${DOCKER_SWARM_HOST01:-mon01}:24224
        tag: docker.{{.ID}}
    networks:
       - elastic_grid

  kibana:
    image: docker.elastic.co/kibana/kibana:5.5.0
    depends_on:
      - fluentd
      - elasticsearch
    env_file:
      - poc.env
    deploy:
      replicas: 2 
    environment:
      - SERVER_NAME=kibana.lab.lab42
      - XPACK_MONITORING_ENABLED=false
      - ELASTICSEARCH_URL=http://elastic_proxy:9200 
    ports:
      - 5601:5601
    logging:
      driver: fluentd
      options:
        fluentd-address: ${DOCKER_SWARM_HOST01:-mon01}:24224
        tag: docker.{{.ID}}
    networks:
      - default_public
      - elastic_grid
  
  grafana:
    image: grafana/grafana
    depends_on:
      - fluentd
    volumes:
      - ${PWD}/grafana/lib:/var/lib/grafana
    env_file:
     - poc.env
    environment: {}
    ports:
      - 3000:3000
    logging:
      driver: fluentd
      options:
        fluentd-address: ${DOCKER_SWARM_HOST01:-mon01}:24224
        tag: docker.{{.ID}}
    networks:
     - influxdb_grid
     - default_public

  influxdb:
    image: influxdb
    depends_on:
      - fluentd
    volumes:
      - ${PWD}/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
    env_file:
     - poc.env
    deploy:
      replicas: 1
    environment:
      - INFLUXDB_GRAPHITE_ENABLED=true
      - INFLUXDB_ADMIN_ENABLED=true
    ports:
      - 8087/tcp
      - 8087/udp
      - 2003/tcp
      - 8083/tcp
    logging:
      driver: fluentd
      options:
        fluentd-address: ${DOCKER_SWARM_HOST01:-mon01}:24224
        tag: docker.{{.ID}}
    networks:
      - influxdb_grid
      - default_public 

  docker_visualizer:
    image: dockersamples/visualizer
    depends_on:
      - fluentd
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
     - poc.env
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    ports:
      - 8099:8080
    logging:
      driver: fluentd
      options:
        fluentd-address: ${DOCKER_SWARM_HOST01:-mon01}:24224
        tag: docker.{{.ID}}

networks:
  elastic_grid:
    driver: overlay
  influxdb_grid:
    driver: overlay
  default_public:

#:vim sts=2 ts=2 # :vim
